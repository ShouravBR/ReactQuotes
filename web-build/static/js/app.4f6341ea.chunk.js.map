{"version":3,"sources":["App.js","webpack:///./index.js?41f5"],"names":["SingleQuote","props","useState","isFavourite","setFavourite","View","style","styles","singlequotecontainer","singlequote","Text","text","author","flexDirection","padding","flex","justifyContent","alignItems","Pressable","onPress","removeFavourite","addFavourite","AntDesign","name","Quotes","isLoading","setLoading","data","setData","useEffect","a","async","fetch","response","json","console","error","getQuotes","focusCount","setFocusCount","useFocusEffect","useCallback","userFavourites","SafeAreaView","container","ActivityIndicator","FlatList","keyExtractor","item","index","length","renderItem","quoteInFavourite","Favourites","toString","Stack","createNativeStackNavigator","MyQuotes","navigation","useNavigation","log","userQuotes","deleteQuote","AddQuoteContainer","navigate","AddQuoteIcon","AddQuote","quoteText","setQuoteText","quoteAuthor","setQuoteAuthor","inputContainer","TextInput","inputQuote","multiline","numberOfLines","onChangeText","newText","inputName","value","submitQuoteButton","submitQuote","MyQuotesStack","Navigator","Screen","children","Tab","createBottomTabNavigator","MyTabs","options","tabBarLabel","tabBarIcon","color","size","headerShown","StyleSheet","create","paddingTop","fontSize","textAlign","borderWidth","borderRadius","margin","borderBottomWidth","position","width","height","right","bottom","backgroundColor","elevation","alignSelf","App","isFavouritesLoading","setFavouritesLoading","setUserFavourites","storeFavourites","jsonValue","JSON","stringify","AsyncStorage","setItem","isQuotesLoading","setQuotesLoading","setUserQuotes","storeQuotes","getItem","parse","getUserFavourites","getUserQuotes","NavigationContainer","userFavs","undefined","find","e","newUserFavs","push","idx","findIndex","splice","newUserQuotes","quoteItem","registerRootComponent"],"mappings":"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","file":"static/js/app.4f6341ea.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { StyleSheet, TextInput, SafeAreaView, FlatList, Text, View, ActivityIndicator, Pressable } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { AntDesign } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useFocusEffect, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n\nconst SingleQuote = (props) => {\n  // console.log(props);\n  const [isFavourite, setFavourite] = useState(props.isFavourite)\n\n  function addFavourite() {\n    setFavourite(true)\n    props.addFavourite(props.text, props.author)\n  }\n  function removeFavourite() {\n    setFavourite(false)\n    props.removeFavourite(props.text, props.author)\n  }\n  // useIsFocused();\n  // console.log(props.isFavourite)\n\n  return (\n    <View style={styles.singlequotecontainer}>\n      <View style={styles.singlequote}>\n        <Text style={styles.text}>{props.text}</Text>\n        <Text>{props.author}</Text>\n      </View>\n      <View style={{\n        flexDirection: 'row',\n        padding: 5,\n      }}>\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-start' }}>\n          <Pressable\n            onPress={() => {\n              isFavourite ? removeFavourite() : addFavourite()\n            }}\n          >\n            <AntDesign name={isFavourite ? \"heart\" : \"hearto\"}></AntDesign>\n          </Pressable>\n\n        </View>\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end' }}>\n          <Text>Sentiment</Text>\n        </View>\n      </View>\n\n    </View>\n  )\n}\n\nfunction Quotes(props) {\n  // console.log(props);\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  const getQuotes = async () => {\n    try {\n\n      const url = \"https://type.fit/api/quotes\"\n\n      const response = await fetch(url);\n      const json = await response.json();\n      // setData(json.slice(0, 10));\n      setData(json);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getQuotes();\n  }, []);\n\n  const [focusCount, setFocusCount] = useState(0);\n\n  useFocusEffect(\n    useCallback(() => {\n      setFocusCount(focusCount + 1)\n      // console.log(focusCount, props.userFavourites)\n    }, [props.userFavourites])\n  )\n\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {isLoading ? <ActivityIndicator /> : (\n        <FlatList\n          data={data}\n          keyExtractor={(item, index) => (data.length * focusCount + index)}\n          // extraData={focusCount}\n          renderItem={({ item }) => (\n            <SingleQuote text={item.text}\n              author={item.author}\n              isFavourite={props.quoteInFavourite(props.userFavourites, item)}\n              addFavourite={props.addFavourite}\n              removeFavourite={props.removeFavourite}\n            />\n          )}\n        />\n      )}\n    </SafeAreaView>\n  );\n}\n\nfunction Favourites(props) {\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={props.userFavourites}\n        keyExtractor={(item, index) => index.toString()}\n        renderItem={({ item }) => (\n          <SingleQuote text={item.text} author={item.author}\n            isFavourite={props.quoteInFavourite(props.userFavourites, item)}\n            addFavourite={props.addFavourite}\n            removeFavourite={props.removeFavourite}\n          />\n        )}\n      />\n    </SafeAreaView>\n  );\n}\n\nconst Stack = createNativeStackNavigator();\n\nfunction MyQuotes(props) {\n  const navigation = useNavigation();\n  console.log('myquotes-screen:', props);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={props.userQuotes}\n        keyExtractor={(item, index) => (index)}\n        renderItem={({ item }) => (\n          <View style={styles.singlequotecontainer}>\n            <View style={styles.singlequote}>\n              <Text style={styles.text}>{item.text}</Text>\n              <Text>{item.author}</Text>\n            </View>\n            <View style={{\n              flexDirection: 'row',\n              padding: 5,\n            }}>\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-start' }}>\n                <Pressable onPress={()=>{ props.deleteQuote(item)}}\n                >\n                  <AntDesign name={\"delete\"}></AntDesign>\n                </Pressable>\n\n              </View>\n              <View style={{ flex: 1, justifyContent: 'center', alignItems: 'flex-end' }}>\n                <Text>Sentiment</Text>\n              </View>\n            </View>\n          </View>\n        )}\n      />\n      <View style={styles.container}>\n        <Pressable style={styles.AddQuoteContainer}\n        onPress={() => { navigation.navigate('Add Quote') }}\n        >\n          <AntDesign name={\"plus\"} style={styles.AddQuoteIcon}></AntDesign>\n        </Pressable>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nfunction AddQuote(props) {\n  const navigation = useNavigation();\n  // console.log(props)\n\n  const [quoteText, setQuoteText] = useState(\"\");\n  const [quoteAuthor, setQuoteAuthor] = useState(\"Me\");\n  \n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.inputContainer}>\n        <TextInput style={styles.inputQuote}\n          multiline={true}\n          numberOfLines={5}\n          onChangeText={newText => setQuoteText(newText)}\n        />\n      </View>\n      <View style={styles.inputContainer}>\n        <TextInput style={styles.inputName}\n          onChangeText={newText => setQuoteAuthor(newText)}\n          value=\"Me\"\n        />\n      </View>\n      <View style={styles.container}>\n        <Pressable style={styles.submitQuoteButton}\n          onPress={() => { \n            props.submitQuote(quoteText, quoteAuthor)\n            navigation.navigate('My Quotes') \n            }}>\n          <AntDesign name={\"addfile\"} style={styles.AddQuoteIcon}>\n            <Text>Add quote</Text>\n          </AntDesign>\n\n        </Pressable>\n      </View>\n    </SafeAreaView>\n  )\n}\nfunction MyQuotesStack(props) {\n  // console.log(props);\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"My Quotes\" children={() =>\n        <MyQuotes\n          userQuotes={props.userQuotes}\n          deleteQuote={props.deleteQuote}\n        />}\n      />\n      <Stack.Screen name=\"Add Quote\" children={() =>\n        <AddQuote\n          submitQuote={props.submitQuote}\n        />}\n      />\n    </Stack.Navigator>\n\n\n  );\n}\n\nconst Tab = createBottomTabNavigator();\n\nfunction MyTabs(props) {\n  // console.log(props)\n  return (\n    <Tab.Navigator>\n      <Tab.Screen name=\"Quotes\"\n        children={() => <Quotes {...props} />}\n        options={{\n          tabBarLabel: 'Quotes',\n          tabBarIcon: ({ color, size }) => (\n            <AntDesign name=\"book\" color={color} size={size} />\n          ),\n        }} />\n      <Tab.Screen name=\"Favourites\"\n        children={() => <Favourites {...props} />}\n        options={{\n          tabBarLabel: 'Favourites',\n          tabBarIcon: ({ color, size }) => (\n            <AntDesign name=\"heart\" color={color} size={size} />\n          ),\n        }} />\n      <Tab.Screen name=\"My Quotes Stack\"\n        children={() => <MyQuotesStack\n          userQuotes={props.userQuotes}\n          submitQuote={props.submitQuote}\n          deleteQuote={props.deleteQuote}\n        />}\n        options={{\n          headerShown: false,\n          tabBarLabel: 'My Quotes',\n          tabBarIcon: ({ color, size }) => (\n            <AntDesign name=\"form\" color={color} size={size} />\n          ),\n        }} />\n    </Tab.Navigator>\n  );\n}\n\nfunction App() {\n  const [isFavouritesLoading, setFavouritesLoading] = useState(true);\n  const [userFavourites, setUserFavourites] = useState([]);\n\n  const getUserFavourites = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem('Favourites')\n      // console.log(jsonValue)\n      const json = jsonValue != null ? JSON.parse(jsonValue) : [];\n      setUserFavourites(json);\n\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setFavouritesLoading(false);\n    }\n  }\n\n  function quoteInFavourite(userFavs, item) {\n\n    const y = userFavs.find(e => JSON.stringify(e) == JSON.stringify(item)) != undefined\n\n    // console.log(y)\n\n    return y\n  }\n\n  const storeFavourites = async () => {\n    try {\n      const jsonValue = JSON.stringify(userFavourites)\n      await AsyncStorage.setItem('Favourites', jsonValue)\n      // console.log(jsonValue)\n    } catch (e) {\n      console.error('error updating favourites')\n    } finally {\n      console.log('favourites updated', userFavourites)\n    }\n  }\n\n  function addFavourite(text, author) {\n    // console.log('callback reached')\n    const newUserFavs = userFavourites\n    // console.log(newUserFavs)\n\n    newUserFavs.push({\n      'text': text,\n      'author': author\n    })\n    // console.log(newUserFavs)\n    setUserFavourites([...newUserFavs])\n\n    storeFavourites()\n  }\n\n  function removeFavourite(text, author) {\n    // console.log('callback reached')\n    const newUserFavs = userFavourites\n    // console.log(newUserFavs)\n\n    const item = {\n      'text': text,\n      'author': author\n    }\n\n    const idx = newUserFavs.findIndex(e => JSON.stringify(e) == JSON.stringify(item))\n\n    if (idx < 0) {\n      console.error('quote', text, 'not in favourites')\n    }\n\n    newUserFavs.splice(idx, 1)\n\n    // console.log(newUserFavs)\n    setUserFavourites([...newUserFavs])\n\n    storeFavourites()\n  }\n\n  const [isQuotesLoading, setQuotesLoading] = useState(true);\n  const [userQuotes, setUserQuotes] = useState([]);\n\n  const getUserQuotes = async () => {\n    try {\n      const jsonValue = await AsyncStorage.getItem('Quotes')\n      // console.log(jsonValue)\n      const json = jsonValue != null ? JSON.parse(jsonValue) : [];\n      setUserQuotes(json);\n\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setQuotesLoading(false);\n    }\n  }\n\n  const storeQuotes = async () => {\n    try {\n      const jsonValue = JSON.stringify(userQuotes)\n      await AsyncStorage.setItem('Quotes', jsonValue)\n      // console.log(jsonValue)\n    } catch (e) {\n      console.error('error updating User Quotes')\n    } finally {\n      console.log('User Quotes updated', userQuotes)\n    }\n  }\n\n  function submitQuote(text, author){\n    const newUserQuotes = userQuotes\n    newUserQuotes.push({\n      'text': text,\n      'author': author\n    })\n\n    setUserQuotes([...newUserQuotes])\n    storeQuotes()\n  }\n\n  function deleteQuote(quoteItem){\n    const newUserQuotes = userQuotes\n\n    const idx = newUserQuotes.findIndex(e => JSON.stringify(e) == JSON.stringify(quoteItem))\n\n    if (idx < 0) {\n      console.error('quote', text, 'not in User Quotes')\n    }\n\n    newUserQuotes.splice(idx, 1)\n    setUserQuotes([...newUserQuotes])\n\n    storeQuotes()\n  }\n\n  useEffect(() => {\n    getUserFavourites();\n    getUserQuotes();\n  }, []);\n\n  return (\n    <NavigationContainer>\n      {isFavouritesLoading & isQuotesLoading ? <ActivityIndicator /> : (\n        <MyTabs\n          userFavourites={userFavourites}\n          quoteInFavourite={quoteInFavourite}\n          addFavourite={addFavourite}\n          removeFavourite={removeFavourite}\n          userQuotes={userQuotes}\n          submitQuote={submitQuote}\n          deleteQuote={deleteQuote}\n        />\n      )}\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 5,\n  },\n  text: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  singlequotecontainer: {\n    borderWidth: 1,\n    borderRadius: 5,\n    margin: 5,\n  },\n  singlequote: {\n    padding: 5,\n    borderBottomWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  AddQuoteContainer: {\n    position: 'absolute',\n    width: 56,\n    height: 56,\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 20,\n    bottom: 20,\n    backgroundColor: '#03A9F4',\n    borderRadius: 30,\n    elevation: 8\n  },\n  AddQuoteIcon: {\n    fontSize: 40,\n    color: 'white'\n  },\n  inputQuote: {\n    height: 200,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  inputName: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  submitQuoteButton: {\n    backgroundColor: '#03A9F4',\n    alignSelf: 'flex-start',\n    justifyContent: 'center',\n    margin: 12,\n    padding: 5,\n  }\n});\n\nexport default App;","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}